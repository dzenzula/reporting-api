basePath: /reporting-api
definitions:
  models.AuthUserData:
    properties:
      authStatus:
        type: integer
      displayName:
        type: string
      domain:
        type: string
      name:
        type: string
      permission:
        items:
          $ref: '#/definitions/models.MyPermission'
        type: array
      type:
        type: string
    type: object
  models.CreateReport:
    properties:
      alias:
        type: string
      description:
        type: string
      operation_name:
        type: string
      owner:
        type: string
      parentId:
        type: integer
      text:
        type: string
      url:
        type: string
      visible:
        type: boolean
    type: object
  models.DataField:
    properties:
      url:
        type: string
    type: object
  models.FavoriteReport:
    properties:
      id:
        type: integer
      login:
        type: string
      reportId:
        type: integer
    type: object
  models.GetCategory:
    properties:
      description:
        type: string
      id:
        type: integer
      parentId:
        type: integer
      text:
        type: string
      type:
        type: string
      visible:
        type: boolean
    type: object
  models.InsertCategory:
    properties:
      description:
        type: string
      parentId:
        type: integer
      text:
        type: string
      visible:
        type: boolean
    type: object
  models.MyPermission:
    properties:
      name:
        type: string
      permission:
        type: integer
    type: object
  models.Report:
    properties:
      alias:
        type: string
      data:
        $ref: '#/definitions/models.DataField'
      description:
        type: string
      id:
        type: integer
      operation_name:
        type: string
      owner:
        type: string
      parentId:
        type: integer
      text:
        type: string
      type:
        type: string
      visible:
        type: boolean
    type: object
  models.UpdateCategory:
    properties:
      description:
        type: string
      id:
        type: integer
      text:
        type: string
      visible:
        type: boolean
    type: object
  models.UpdateCategoryParent:
    properties:
      fromCat:
        type: integer
      id:
        type: integer
      toCat:
        type: integer
    type: object
  models.UpdateReport:
    properties:
      description:
        type: string
      id:
        type: integer
      operation_name:
        type: string
      owner:
        type: string
      text:
        type: string
      url:
        type: string
      visible:
        type: boolean
    type: object
  models.UserData:
    properties:
      domain:
        type: string
      login:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for reporting API.
  title: Reporting API
  version: "1.0"
paths:
  /api/Authorization/GetCurrentUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthUserData'
      tags:
      - Authorization
  /api/Authorization/LogInAuthorization:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные пользователя
        in: body
        name: userdata
        required: true
        schema:
          $ref: '#/definitions/models.UserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthUserData'
      tags:
      - Authorization
  /api/Authorization/LogOutAuthorization:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Authorization
  /api/Categories:
    delete:
      consumes:
      - application/json
      description: Удалить категорию
      parameters:
      - description: Id категории
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Category
      tags:
      - Categories
    get:
      consumes:
      - application/json
      description: Получение списка категорий
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetCategory'
            type: array
      summary: Get Categories
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Создать категорию
      parameters:
      - description: Новая категория
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.InsertCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Insert Category
      tags:
      - Categories
    put:
      consumes:
      - application/json
      description: Обновить категорию
      parameters:
      - description: Обновленная категория
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Category
      tags:
      - Categories
  /api/Categories/GetCategoriesForAdmin:
    get:
      consumes:
      - application/json
      description: Получение списка категорий для администратора
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetCategory'
            type: array
      summary: Get Categories for Admin
      tags:
      - Categories
  /api/Categories/UpdateCategoryParent:
    put:
      consumes:
      - application/json
      description: Обновить родительскую категорию
      parameters:
      - description: Обновленный родительский айди
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategoryParent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Parent Category
      tags:
      - Categories
  /api/FavoriteReports/AddReport:
    post:
      description: Add a report to favorites by report ID
      parameters:
      - description: Report ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Add a report to favorites
      tags:
      - FavoriteReports
  /api/FavoriteReports/DeleteReport:
    delete:
      description: Remove a report from favorites by report ID
      parameters:
      - description: Report ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Remove a report from favorites
      tags:
      - FavoriteReports
  /api/FavoriteReports/GetReports:
    get:
      description: Get a list of all favorite reports
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FavoriteReport'
            type: array
      summary: Get all favorite reports
      tags:
      - FavoriteReports
  /api/Reports:
    delete:
      consumes:
      - application/json
      description: Remove a report from a category
      parameters:
      - description: Report ID
        in: query
        name: reportId
        required: true
        type: integer
      - description: Category ID
        in: body
        name: categoryId
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Remove a report
      tags:
      - Reports
    get:
      description: Get a list of all reports
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Report'
            type: array
      summary: Get all reports
      tags:
      - Reports
    post:
      consumes:
      - application/json
      description: Create a new report
      parameters:
      - description: Report to create
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/models.CreateReport'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Create a new report
      tags:
      - Reports
    put:
      consumes:
      - application/json
      description: Update an existing report
      parameters:
      - description: Report to update
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/models.UpdateReport'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Update a report
      tags:
      - Reports
  /api/Reports/AddReportRelation:
    post:
      consumes:
      - application/json
      description: Add a report to a category
      parameters:
      - description: Report ID
        in: query
        name: reportId
        required: true
        type: integer
      - description: Category ID
        in: body
        name: categoryId
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Add report relation
      tags:
      - Reports
  /api/Reports/UpdateCategoryReports:
    put:
      consumes:
      - application/json
      description: Update the category of a report
      parameters:
      - description: Category data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategoryParent'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Update category reports
      tags:
      - Reports
swagger: "2.0"
