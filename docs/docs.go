// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/Authorization/GetCurrentUserInfo": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthUserData"
                        }
                    }
                }
            }
        },
        "/api/Authorization/LogInAuthorization": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "userdata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthUserData"
                        }
                    }
                }
            }
        },
        "/api/Authorization/LogOutAuthorization": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Categories": {
            "get": {
                "description": "Получение списка категорий",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GetCategory"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Обновить категорию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update Category",
                "parameters": [
                    {
                        "description": "Обновленная категория",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Создать категорию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Insert Category",
                "parameters": [
                    {
                        "description": "Новая категория",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InsertCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created Category Id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/Categories/GetCategoriesForAdmin": {
            "get": {
                "description": "Получение списка категорий для администратора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Categories for Admin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GetCategory"
                            }
                        }
                    }
                }
            }
        },
        "/api/Categories/UpdateCategoryParent": {
            "put": {
                "description": "Обновить родительскую категорию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update Parent Category",
                "parameters": [
                    {
                        "description": "Обновленный родительский айди",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCategoryParent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Categories/{categoryId}": {
            "delete": {
                "description": "Удалить категорию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id категории",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/FavoriteReports/AddReport": {
            "post": {
                "description": "Add a report to favorites by report ID and category ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FavoriteReports"
                ],
                "summary": "Add a report to favorites",
                "parameters": [
                    {
                        "description": "Favorite report request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FavoriteReportDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/FavoriteReports/DeleteReport": {
            "delete": {
                "description": "Remove a report from favorites by report ID and category ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FavoriteReports"
                ],
                "summary": "Remove a report from favorites",
                "parameters": [
                    {
                        "description": "Favorite report request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FavoriteReportDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/FavoriteReports/GetReports": {
            "get": {
                "description": "Get a list of all favorite reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FavoriteReports"
                ],
                "summary": "Get all favorite reports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FavoriteReport"
                            }
                        }
                    }
                }
            }
        },
        "/api/Reports": {
            "get": {
                "description": "Get a list of all reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Get all reports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Report"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Update a report",
                "parameters": [
                    {
                        "description": "Report to update",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Create a new report",
                "parameters": [
                    {
                        "description": "Report to create",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created report ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/Reports/AddReportRelation/{reportId}": {
            "post": {
                "description": "Add a report to a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Add report relation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Report ID",
                        "name": "reportId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/Reports/GetReportsForAdmin": {
            "get": {
                "description": "Получение списка отчетов для администратора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Get Reports for Admin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Report"
                            }
                        }
                    }
                }
            }
        },
        "/api/Reports/UpdateCategoryReports": {
            "put": {
                "description": "Update the category of a report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Update category reports",
                "parameters": [
                    {
                        "description": "Category data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCategoryParent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/Reports/{reportId}": {
            "delete": {
                "description": "Remove a report from a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Remove a report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Report ID",
                        "name": "reportId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/TrackVisit": {
            "post": {
                "description": "Track visited reports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VisitHistory"
                ],
                "summary": "Add visited report",
                "parameters": [
                    {
                        "description": "Report and Category IDs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrackVisitDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/TrackVisit/GetLastVisited": {
            "get": {
                "description": "Get last visited reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VisitedReports"
                ],
                "summary": "Get last visited reports",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Quantity of reports to return",
                        "name": "quantity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VisitedReport"
                            }
                        }
                    }
                }
            }
        },
        "/api/data": {
            "get": {
                "description": "Returns all visible categories and reports (empty path or two aliases)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get all visible categories and reports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PathDataResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/data/{alias}": {
            "get": {
                "description": "Returns categories and reports for a single alias (public or private)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get category or report by single alias",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alias (category or private alias)",
                        "name": "alias",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PathDataResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/data/{alias}/{subalias}": {
            "get": {
                "description": "Returns all visible categories and reports (empty path or two aliases)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get all visible categories and reports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PathDataResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AuthUserData": {
            "type": "object",
            "properties": {
                "authStatus": {
                    "type": "integer"
                },
                "displayName": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MyPermission"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.CreateReport": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "operation_name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "privateAlias": {
                    "type": "string"
                },
                "privateAliasExpiresAt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "models.DataField": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "models.FavoriteReport": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "reportId": {
                    "type": "integer"
                }
            }
        },
        "models.FavoriteReportDTO": {
            "type": "object",
            "required": [
                "categoryId",
                "reportId"
            ],
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "reportId": {
                    "type": "integer"
                }
            }
        },
        "models.GetCategory": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parentId": {
                    "type": "integer"
                },
                "privateAlias": {
                    "type": "string"
                },
                "privateAliasExpiresAt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "models.InsertCategory": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "privateAlias": {
                    "type": "string"
                },
                "privateAliasExpiresAt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "models.MyPermission": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "integer"
                }
            }
        },
        "models.PathDataResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetCategory"
                    }
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                }
            }
        },
        "models.Report": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/models.DataField"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "operation_name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "privateAlias": {
                    "type": "string"
                },
                "privateAliasExpiresAt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "models.TrackVisitDTO": {
            "type": "object",
            "required": [
                "categoryId",
                "reportId"
            ],
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "reportId": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateCategory": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "privateAlias": {
                    "type": "string"
                },
                "privateAliasExpiresAt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateCategoryParent": {
            "type": "object",
            "properties": {
                "fromCat": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "toCat": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateReport": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "operation_name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "privateAlias": {
                    "type": "string"
                },
                "privateAliasExpiresAt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "models.UserData": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.VisitedReport": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "category_alias": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/reporting-api",
	Schemes:          []string{},
	Title:            "Reporting API",
	Description:      "This is a sample server for reporting API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
